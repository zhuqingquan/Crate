//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer $Globals
{
    float   transparent = 1;            // Offset:    0, size:    4
    float   dx;                         // Offset:    4, size:    4
}

cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
}

//
// 5 local object(s)
//
Texture2D yTexture;
Texture2D uTexture;
Texture2D vTexture;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 7 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 95 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 98
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 101
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 104
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 107
                itof r2.xyzw, l(1, 1, 1, 1)  // r2.x <- texColor.x; r2.y <- texColor.y; r2.z <- texColor.z; r2.w <- texColor.w
                
                #line 147
                mov r3.xyz, l(0,0,0,0)  // r3.x <- ambient.x; r3.y <- ambient.y; r3.z <- ambient.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx
                mov r7.xyz, cb1[17].xyzx
                mov r8.xyzw, cb1[18].xyzw
                mov r9.xyz, cb0[0].xyzx
                mov r10.xyz, cb0[1].xyzx
                mov r11.xyz, cb0[2].xyzx
                mov r12.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r13.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r5.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 165
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 169
                mul r0.w, r2.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 58 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 95 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 98
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 101
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 104
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 107
                itof r2.xyzw, l(1, 1, 1, 1)  // r2.x <- texColor.x; r2.y <- texColor.y; r2.z <- texColor.z; r2.w <- texColor.w
                
                #line 147
                mov r3.xyz, l(0,0,0,0)  // r3.x <- ambient.x; r3.y <- ambient.y; r3.z <- ambient.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx
                mov r7.xyz, cb1[17].xyzx
                mov r8.xyzw, cb1[18].xyzw
                mov r9.xyz, cb0[0].xyzx
                mov r10.xyz, cb0[1].xyzx
                mov r11.xyz, cb0[2].xyzx
                mov r12.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r0.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r1.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                add r5.xyz, r5.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb1[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb1[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb0[4].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb0[5].xyzx
                mov r11.xyz, cb0[6].xyzx
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r13.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r5.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 165
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 169
                mul r0.w, r2.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 95 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 95 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 98
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 101
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // r0.w <- distToEye
                
                #line 104
                div r1.xyz, r1.xyzx, r0.wwww
                
                #line 107
                itof r2.xyzw, l(1, 1, 1, 1)  // r2.x <- texColor.x; r2.y <- texColor.y; r2.z <- texColor.z; r2.w <- texColor.w
                
                #line 147
                mov r3.xyz, l(0,0,0,0)  // r3.x <- ambient.x; r3.y <- ambient.y; r3.z <- ambient.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx
                mov r7.xyz, cb1[17].xyzx
                mov r8.xyzw, cb1[18].xyzw
                mov r9.xyz, cb0[0].xyzx
                mov r10.xyz, cb0[1].xyzx
                mov r11.xyz, cb0[2].xyzx
                mov r12.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r0.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r1.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                add r5.xyz, r5.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb1[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb1[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb0[4].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb0[5].xyzx
                mov r11.xyz, cb0[6].xyzx
                mov r12.xyz, cb0[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r0.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r1.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r1.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r4.xyz, r4.xyzx, r7.xyzx
                add r5.xyz, r5.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb1[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb1[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb1[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb0[8].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb0[9].xyzx
                mov r11.xyz, cb0[10].xyzx
                mov r12.xyz, cb0[11].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r8.w
                exp r0.x, r0.x  // r0.x <- specFactor
                mul r0.yzw, r7.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z
                mul r1.xyz, r8.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                movc r0.xyz, r1.wwww, r0.yzwy, r13.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                movc r1.xyz, r1.wwww, r1.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r0.xyz, r0.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z
                mov r1.xyz, r1.xyzx  // r1.x <- S.x; r1.y <- S.y; r1.z <- S.z
                
                #line 159
                add r3.xyz, r3.xyzx, r6.xyzx
                add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z
                add r1.xyz, r1.xyzx, r5.xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z
                
                #line 165
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 169
                mul r0.w, r2.w, cb1[17].w  // r0.w <- litColor.w
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 132 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float transparent;                 // Offset:    0 Size:     4
                //      = 0x3f800000 
                //   float dx;                          // Offset:    4 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // yTexture                          texture  float4          2d    0        1
                // uTexture                          texture  float4          2d    1        1
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[18], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 11 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                itof r0.xyz, l(1, 1, 1, 0)
                mov r1.x, r0.y  // r1.x <- matYUV2RGB._m00
                mov r1.yzw, l(0,0,1.370705,-0.685353)  // r1.y <- matYUV2RGB._m01; r1.z <- matYUV2RGB._m02; r1.w <- matYUV2RGB._m03
                mov r2.x, r0.z  // r2.x <- matYUV2RGB._m10
                mov r2.yzw, l(0,-0.337633,-0.698001,0.517817)  // r2.y <- matYUV2RGB._m11; r2.z <- matYUV2RGB._m12; r2.w <- matYUV2RGB._m13
                mov r0.x, r0.x  // r0.x <- matYUV2RGB._m20
                mov r0.yzw, l(0,1.732446,0,-0.866223)  // r0.y <- matYUV2RGB._m21; r0.z <- matYUV2RGB._m22; r0.w <- matYUV2RGB._m23
                mov r3.xyz, l(0,0,0,0)  // r3.x <- matYUV2RGB._m30; r3.y <- matYUV2RGB._m31; r3.z <- matYUV2RGB._m32
                mov r3.w, cb0[0].x  // r3.w <- matYUV2RGB._m33
                
                #line 111
                sample_indexable(texture2d)(float,float,float,float) r4.x, v3.xyxx, t0.xyzw, s0
                mov r4.x, r4.x  // r4.x <- y
                sample_indexable(texture2d)(float,float,float,float) r4.y, v3.xyxx, t1.yxzw, s0
                mov r4.y, r4.y  // r4.y <- u
                sample_indexable(texture2d)(float,float,float,float) r4.z, v3.xyxx, t1.xzyw, s0
                mov r4.z, r4.z  // r4.z <- v
                
                #line 136
                mov r4.w, l(1.000000)
                dp4 r1.x, r1.xyzw, r4.xyzw  // r1.x <- texColor.x
                dp4 r1.y, r2.xyzw, r4.xyzw  // r1.y <- texColor.y
                dp4 r1.z, r0.xyzw, r4.xyzw  // r1.z <- texColor.z
                dp4 r0.x, r3.xyzw, r4.xyzw  // r0.x <- texColor.w
                
                #line 143
                mov r1.xyz, r1.xyzx  // r1.x <- litColor.x; r1.y <- litColor.y; r1.z <- litColor.z
                
                #line 169
                mul r0.x, r0.x, cb1[17].w  // r0.x <- litColor.w
                mov o0.xyz, r1.xyzx
                mov o0.w, r0.x
                ret 
                // Approximately 25 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float transparent;                 // Offset:    0 Size:     4
                //      = 0x3f800000 
                //   float dx;                          // Offset:    4 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // yTexture                          texture  float4          2d    0        1
                // uTexture                          texture  float4          2d    1        1
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                // cbPerObject                       cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_constantbuffer cb2[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 11 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                itof r0.xyz, l(1, 1, 1, 0)
                mov r1.x, r0.y  // r1.x <- matYUV2RGB._m00
                mov r1.yzw, l(0,0,1.370705,-0.685353)  // r1.y <- matYUV2RGB._m01; r1.z <- matYUV2RGB._m02; r1.w <- matYUV2RGB._m03
                mov r2.x, r0.z  // r2.x <- matYUV2RGB._m10
                mov r2.yzw, l(0,-0.337633,-0.698001,0.517817)  // r2.y <- matYUV2RGB._m11; r2.z <- matYUV2RGB._m12; r2.w <- matYUV2RGB._m13
                mov r0.x, r0.x  // r0.x <- matYUV2RGB._m20
                mov r0.yzw, l(0,1.732446,0,-0.866223)  // r0.y <- matYUV2RGB._m21; r0.z <- matYUV2RGB._m22; r0.w <- matYUV2RGB._m23
                mov r3.xyz, l(0,0,0,0)  // r3.x <- matYUV2RGB._m30; r3.y <- matYUV2RGB._m31; r3.z <- matYUV2RGB._m32
                mov r3.w, cb0[0].x  // r3.w <- matYUV2RGB._m33
                
                #line 95
                dp3 r4.x, v2.xyzx, v2.xyzx
                rsq r4.x, r4.x
                mul r4.xyz, r4.xxxx, v2.xyzx  // r4.x <- pin.NormalW.x; r4.y <- pin.NormalW.y; r4.z <- pin.NormalW.z
                
                #line 98
                mov r5.xyz, -v1.xyzx
                add r5.xyz, r5.xyzx, cb1[12].xyzx  // r5.x <- toEye.x; r5.y <- toEye.y; r5.z <- toEye.z
                
                #line 101
                dp3 r4.w, r5.xyzx, r5.xyzx
                sqrt r4.w, r4.w  // r4.w <- distToEye
                
                #line 104
                div r5.xyz, r5.xyzx, r4.wwww
                
                #line 111
                sample_indexable(texture2d)(float,float,float,float) r6.x, v3.xyxx, t0.xyzw, s0
                mov r6.x, r6.x  // r6.x <- y
                sample_indexable(texture2d)(float,float,float,float) r6.y, v3.xyxx, t1.yxzw, s0
                mov r6.y, r6.y  // r6.y <- u
                sample_indexable(texture2d)(float,float,float,float) r6.z, v3.xyxx, t1.xzyw, s0
                mov r6.z, r6.z  // r6.z <- v
                
                #line 136
                mov r6.w, l(1.000000)
                dp4 r1.x, r1.xyzw, r6.xyzw  // r1.x <- texColor.x
                dp4 r1.y, r2.xyzw, r6.xyzw  // r1.y <- texColor.y
                dp4 r1.z, r0.xyzw, r6.xyzw  // r1.z <- texColor.z
                dp4 r0.x, r3.xyzw, r6.xyzw  // r0.x <- texColor.w
                
                #line 147
                mov r0.yzw, l(0,0,0,0)  // r0.y <- ambient.x; r0.z <- ambient.y; r0.w <- ambient.z
                mov r2.xyz, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx
                mov r7.xyz, cb2[17].xyzx
                mov r8.xyzw, cb2[18].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r4.xyz, r4.xyzx
                mov r5.xyz, r5.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r4.xyz, r3.wwww, r4.xyzx
                add r4.xyz, r9.xyzx, r4.xyzx  // r4.x <- v.x; r4.y <- v.y; r4.z <- v.z
                dp3 r3.w, r4.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r4.xyz, r7.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mul r5.xyz, r8.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                movc r4.xyz, r2.wwww, r4.xyzx, r13.xyzx
                movc r5.xyz, r2.wwww, r5.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r4.xyz, r4.xyzx  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, r5.xyzx  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r4.xyzx
                add r3.xyz, r3.xyzx, r5.xyzx
                
                #line 165
                add r0.yzw, r0.yyzw, r2.xxyz
                mul r0.yzw, r0.yyzw, r1.xxyz
                add r0.yzw, r3.xxyz, r0.yyzw  // r0.y <- litColor.x; r0.z <- litColor.y; r0.w <- litColor.z
                
                #line 169
                mul r0.x, r0.x, cb2[17].w  // r0.x <- litColor.w
                mov o0.xyz, r0.yzwy
                mov o0.w, r0.x
                ret 
                // Approximately 77 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float transparent;                 // Offset:    0 Size:     4
                //      = 0x3f800000 
                //   float dx;                          // Offset:    4 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // yTexture                          texture  float4          2d    0        1
                // uTexture                          texture  float4          2d    1        1
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                // cbPerObject                       cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_constantbuffer cb2[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 11 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                itof r0.xyz, l(1, 1, 1, 0)
                mov r1.x, r0.y  // r1.x <- matYUV2RGB._m00
                mov r1.yzw, l(0,0,1.370705,-0.685353)  // r1.y <- matYUV2RGB._m01; r1.z <- matYUV2RGB._m02; r1.w <- matYUV2RGB._m03
                mov r2.x, r0.z  // r2.x <- matYUV2RGB._m10
                mov r2.yzw, l(0,-0.337633,-0.698001,0.517817)  // r2.y <- matYUV2RGB._m11; r2.z <- matYUV2RGB._m12; r2.w <- matYUV2RGB._m13
                mov r0.x, r0.x  // r0.x <- matYUV2RGB._m20
                mov r0.yzw, l(0,1.732446,0,-0.866223)  // r0.y <- matYUV2RGB._m21; r0.z <- matYUV2RGB._m22; r0.w <- matYUV2RGB._m23
                mov r3.xyz, l(0,0,0,0)  // r3.x <- matYUV2RGB._m30; r3.y <- matYUV2RGB._m31; r3.z <- matYUV2RGB._m32
                mov r3.w, cb0[0].x  // r3.w <- matYUV2RGB._m33
                
                #line 95
                dp3 r4.x, v2.xyzx, v2.xyzx
                rsq r4.x, r4.x
                mul r4.xyz, r4.xxxx, v2.xyzx  // r4.x <- pin.NormalW.x; r4.y <- pin.NormalW.y; r4.z <- pin.NormalW.z
                
                #line 98
                mov r5.xyz, -v1.xyzx
                add r5.xyz, r5.xyzx, cb1[12].xyzx  // r5.x <- toEye.x; r5.y <- toEye.y; r5.z <- toEye.z
                
                #line 101
                dp3 r4.w, r5.xyzx, r5.xyzx
                sqrt r4.w, r4.w  // r4.w <- distToEye
                
                #line 104
                div r5.xyz, r5.xyzx, r4.wwww
                
                #line 111
                sample_indexable(texture2d)(float,float,float,float) r6.x, v3.xyxx, t0.xyzw, s0
                mov r6.x, r6.x  // r6.x <- y
                sample_indexable(texture2d)(float,float,float,float) r6.y, v3.xyxx, t1.yxzw, s0
                mov r6.y, r6.y  // r6.y <- u
                sample_indexable(texture2d)(float,float,float,float) r6.z, v3.xyxx, t1.xzyw, s0
                mov r6.z, r6.z  // r6.z <- v
                
                #line 136
                mov r6.w, l(1.000000)
                dp4 r1.x, r1.xyzw, r6.xyzw  // r1.x <- texColor.x
                dp4 r1.y, r2.xyzw, r6.xyzw  // r1.y <- texColor.y
                dp4 r1.z, r0.xyzw, r6.xyzw  // r1.z <- texColor.z
                dp4 r0.x, r3.xyzw, r6.xyzw  // r0.x <- texColor.w
                
                #line 147
                mov r0.yzw, l(0,0,0,0)  // r0.y <- ambient.x; r0.z <- ambient.y; r0.w <- ambient.z
                mov r2.xyz, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx
                mov r7.xyz, cb2[17].xyzx
                mov r8.xyzw, cb2[18].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r4.xyz, r4.xyzx
                mov r5.xyz, r5.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r3.wwww, r4.xyzx
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r1.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r2.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r2.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r7.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb2[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb2[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb1[4].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb1[5].xyzx
                mov r11.xyz, cb1[6].xyzx
                mov r12.xyz, cb1[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r4.xyz, r3.wwww, r4.xyzx
                add r4.xyz, r9.xyzx, r4.xyzx  // r4.x <- v.x; r4.y <- v.y; r4.z <- v.z
                dp3 r3.w, r4.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r4.xyz, r7.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mul r5.xyz, r8.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                movc r4.xyz, r2.wwww, r4.xyzx, r13.xyzx
                movc r5.xyz, r2.wwww, r5.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r4.xyz, r4.xyzx  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, r5.xyzx  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r4.xyzx
                add r3.xyz, r3.xyzx, r5.xyzx
                
                #line 165
                add r0.yzw, r0.yyzw, r2.xxyz
                mul r0.yzw, r0.yyzw, r1.xxyz
                add r0.yzw, r3.xxyz, r0.yyzw  // r0.y <- litColor.x; r0.z <- litColor.y; r0.w <- litColor.z
                
                #line 169
                mul r0.x, r0.x, cb2[17].w  // r0.x <- litColor.w
                mov o0.xyz, r0.yzwy
                mov o0.w, r0.x
                ret 
                // Approximately 114 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 80 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 84
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 87
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float transparent;                 // Offset:    0 Size:     4
                //      = 0x3f800000 
                //   float dx;                          // Offset:    4 Size:     4 [unused]
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // yTexture                          texture  float4          2d    0        1
                // uTexture                          texture  float4          2d    1        1
                // $Globals                          cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                // cbPerObject                       cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_constantbuffer cb2[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 15
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 11 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                itof r0.xyz, l(1, 1, 1, 0)
                mov r1.x, r0.y  // r1.x <- matYUV2RGB._m00
                mov r1.yzw, l(0,0,1.370705,-0.685353)  // r1.y <- matYUV2RGB._m01; r1.z <- matYUV2RGB._m02; r1.w <- matYUV2RGB._m03
                mov r2.x, r0.z  // r2.x <- matYUV2RGB._m10
                mov r2.yzw, l(0,-0.337633,-0.698001,0.517817)  // r2.y <- matYUV2RGB._m11; r2.z <- matYUV2RGB._m12; r2.w <- matYUV2RGB._m13
                mov r0.x, r0.x  // r0.x <- matYUV2RGB._m20
                mov r0.yzw, l(0,1.732446,0,-0.866223)  // r0.y <- matYUV2RGB._m21; r0.z <- matYUV2RGB._m22; r0.w <- matYUV2RGB._m23
                mov r3.xyz, l(0,0,0,0)  // r3.x <- matYUV2RGB._m30; r3.y <- matYUV2RGB._m31; r3.z <- matYUV2RGB._m32
                mov r3.w, cb0[0].x  // r3.w <- matYUV2RGB._m33
                
                #line 95
                dp3 r4.x, v2.xyzx, v2.xyzx
                rsq r4.x, r4.x
                mul r4.xyz, r4.xxxx, v2.xyzx  // r4.x <- pin.NormalW.x; r4.y <- pin.NormalW.y; r4.z <- pin.NormalW.z
                
                #line 98
                mov r5.xyz, -v1.xyzx
                add r5.xyz, r5.xyzx, cb1[12].xyzx  // r5.x <- toEye.x; r5.y <- toEye.y; r5.z <- toEye.z
                
                #line 101
                dp3 r4.w, r5.xyzx, r5.xyzx
                sqrt r4.w, r4.w  // r4.w <- distToEye
                
                #line 104
                div r5.xyz, r5.xyzx, r4.wwww
                
                #line 111
                sample_indexable(texture2d)(float,float,float,float) r6.x, v3.xyxx, t0.xyzw, s0
                mov r6.x, r6.x  // r6.x <- y
                sample_indexable(texture2d)(float,float,float,float) r6.y, v3.xyxx, t1.yxzw, s0
                mov r6.y, r6.y  // r6.y <- u
                sample_indexable(texture2d)(float,float,float,float) r6.z, v3.xyxx, t1.xzyw, s0
                mov r6.z, r6.z  // r6.z <- v
                
                #line 136
                mov r6.w, l(1.000000)
                dp4 r1.x, r1.xyzw, r6.xyzw  // r1.x <- texColor.x
                dp4 r1.y, r2.xyzw, r6.xyzw  // r1.y <- texColor.y
                dp4 r1.z, r0.xyzw, r6.xyzw  // r1.z <- texColor.z
                dp4 r0.x, r3.xyzw, r6.xyzw  // r0.x <- texColor.w
                
                #line 147
                mov r0.yzw, l(0,0,0,0)  // r0.y <- ambient.x; r0.z <- ambient.y; r0.w <- ambient.z
                mov r2.xyz, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx
                mov r7.xyz, cb2[17].xyzx
                mov r8.xyzw, cb2[18].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r4.xyz, r4.xyzx
                mov r5.xyz, r5.xyzx
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx  // r1.w <- diffuseFactor
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r3.wwww, r4.xyzx
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r1.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r2.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r2.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r7.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb2[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb2[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb1[4].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb1[5].xyzx
                mov r11.xyz, cb1[6].xyzx
                mov r12.xyz, cb1[7].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r3.wwww, r4.xyzx
                add r9.xyz, r9.xyzx, r12.xyzx  // r9.x <- v.x; r9.y <- v.y; r9.z <- v.z
                dp3 r3.w, r9.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r7.xyz, r7.xyzx, r1.wwww
                mul r7.xyz, r10.xyzx, r7.xyzx  // r7.x <- diffuse.x; r7.y <- diffuse.y; r7.z <- diffuse.z
                mul r8.xyz, r8.xyzx, r3.wwww
                mul r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- spec.x; r8.y <- spec.y; r8.z <- spec.z
                movc r7.xyz, r2.wwww, r7.xyzx, r13.xyzx
                movc r8.xyz, r2.wwww, r8.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r7.xyz, r7.xyzx  // r7.x <- D.x; r7.y <- D.y; r7.z <- D.z
                mov r8.xyz, r8.xyzx  // r8.x <- S.x; r8.y <- S.y; r8.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r7.xyzx
                add r3.xyz, r3.xyzx, r8.xyzx
                
                #line 156
                nop 
                mov r6.xyz, cb2[16].xyzx  // r6.x <- mat.Ambient.x; r6.y <- mat.Ambient.y; r6.z <- mat.Ambient.z
                mov r7.xyz, cb2[17].xyzx  // r7.x <- mat.Diffuse.x; r7.y <- mat.Diffuse.y; r7.z <- mat.Diffuse.z
                mov r8.xyzw, cb2[18].xyzw  // r8.x <- mat.Specular.x; r8.y <- mat.Specular.y; r8.z <- mat.Specular.z
                mov r9.xyz, cb1[8].xyzx  // r9.x <- L.Ambient.x; r9.y <- L.Ambient.y; r9.z <- L.Ambient.z
                mov r10.xyz, cb1[9].xyzx
                mov r11.xyz, cb1[10].xyzx
                mov r12.xyz, cb1[11].xyzx  // r12.x <- L.Direction.x; r12.y <- L.Direction.y; r12.z <- L.Direction.z
                
                #line 66 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\LightHelpe"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- diffuse.x; r13.y <- diffuse.y; r13.z <- diffuse.z
                mov r14.xyz, l(0,0,0,0)  // r14.x <- spec.x; r14.y <- spec.y; r14.z <- spec.z
                
                #line 70
                mov r12.xyz, -r12.xyzx  // r12.x <- lightVec.x; r12.y <- lightVec.y; r12.z <- lightVec.z
                
                #line 73
                mul r6.xyz, r6.xyzx, r9.xyzx  // r6.x <- ambient.x; r6.y <- ambient.y; r6.z <- ambient.z
                
                #line 78
                dp3 r1.w, r12.xyzx, r4.xyzx
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r4.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r4.xyz, r3.wwww, r4.xyzx
                add r4.xyz, r9.xyzx, r4.xyzx  // r4.x <- v.x; r4.y <- v.y; r4.z <- v.z
                dp3 r3.w, r4.xyzx, r5.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r8.w
                exp r3.w, r3.w  // r3.w <- specFactor
                mul r4.xyz, r7.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z
                mul r5.xyz, r8.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // r5.x <- spec.x; r5.y <- spec.y; r5.z <- spec.z
                movc r4.xyz, r2.wwww, r4.xyzx, r13.xyzx
                movc r5.xyz, r2.wwww, r5.xyzx, r14.xyzx
                
                #line 156 "D:\´úÂëºÚ¶´\d3d11CodeSet1\Chapter 8 Texturing\Crate\FX\Basi"
                mov r6.xyz, r6.xyzx  // r6.x <- A.x; r6.y <- A.y; r6.z <- A.z
                mov r4.xyz, r4.xyzx  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, r5.xyzx  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 159
                add r0.yzw, r0.yyzw, r6.xxyz
                add r2.xyz, r2.xyzx, r4.xyzx
                add r3.xyz, r3.xyzx, r5.xyzx
                
                #line 165
                add r0.yzw, r0.yyzw, r2.xxyz
                mul r0.yzw, r0.yyzw, r1.xxyz
                add r0.yzw, r3.xxyz, r0.yyzw  // r0.y <- litColor.x; r0.z <- litColor.y; r0.w <- litColor.z
                
                #line 169
                mul r0.x, r0.x, cb2[17].w  // r0.x <- litColor.w
                mov o0.xyz, r0.yzwy
                mov o0.w, r0.x
                ret 
                // Approximately 151 instruction slots used
                            
            };
        }

    }

}

